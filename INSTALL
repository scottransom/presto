Basic steps to install:

1.  Install FFTW3.X  You need to compile FFTW for _single_
  precision (see the config flags I recommend below).

  For all architectures I recommend the following configuration:
  ./configure --enable-shared --enable-single

  Use the --prefix=SOME_PATH option to install the library and
  its related files to SOME_PATH.  (If you have admin access to 
  your machine, --prefix=/usr/local is the default for FFTW and
  is a safe bet).

  If you have a modern version of GCC installed (v3.2 or better) 
  and a modern CPU (Intel Pentium IV, or newer; AMD Opteron 
  or better, G5), you can get _drastically_ better performance by
  adding the following options:

  For Intel PIVs or later, EM64Ts, or AMD64s:
  --enable-sse
  
  For Mac G5s:
  --enable-altivec

2.  Install PGPLOT.  http://www.astro.caltech.edu/~tjp/pgplot/
  You need the X-windows and postscript drivers at a minimum.

3.  Install TEMPO.  Make sure to set the TEMPO environment variable.
  http://pulsar.princeton.edu/tempo/index.html

4.  Install GLIB (v2.X). 
  http://library.gnome.org/devel/glib/ On Linux machines this 
  is almost certainly already on your system (check in /usr/lib 
  and /usr/include/glib*).  Although you may need to install a 
  glib development package in order to have the required include 
  files...

5.  Install CFITSIO.
  http://heasarc.gsfc.nasa.gov/fitsio/
  This is a very easy install and is now needed since PSRFITS
  is now being written by several pulsar instruments (Nice!
  a pulsar data standard that external tools can actually
  view!  How about that!)

6.  Define the PRESTO environment variable to the top level
  directory of the PRESTO distribution (i.e. this directory).

7.  cd to $PRESTO/src.  Check and modify the Makefile for your
  machine of choice.  Ensure that the library and include file
  directories are correct for FFTW, PGPLOT, GLIB, CFITSIO, 
  and TEMPO.

8.  If you are using FFTW, do a 'make makewisdom'.  This gets
  FFTW acquainted with your system.  It is best if you are the
  only user on the machine when you run this, as it is very
  computation intensive and may take a while.

9.  Just for safety's sake (and because SVN sometimes messes up
  file access times), do a "make prep".  That will make sure
  that make does not try to run Clig to re-generate all of the
  command line interface files.

10.  Do a 'make'.  This will make all of the executables.  If you
  want mpiprepsubband (for parallel de-dispersion on clusters) 
  you will need to do a 'make mpi' as well.

11.  The required libraries and miscellaneous files will be
  located in $PRESTO/lib.  The executable will be in $PRESTO/bin.
  You may copy or move the executables wherever you like, but 
  the library files should stay put.  (That's why you define the 
  PRESTO variable -- so the routines can find them).

12.  If you want to save some disk space, do a 'make clean' in
  the 'src' directory.  This will leave the libraries and
  binaries in their respective directories but will get rid of
  all the extra stuff in the 'src' directory.

13.  If you want to use all the python routines (which if you are
  doing anything but the most rudimentary analyses you will want 
  to), you need Python >= version 2.3, and the _new_ Numpy/SciPy.  
  You can get Numpy/Scipy here:  http://www.scipy.org/download/
  I recommend using the Subversion versions (and for PRESTO 
  as well).  In general, the following should work:
     "cd $PRESTO/python ; make ; make fftfit"
  If it doesnt, you will probably need to edit the Makefile 
  or setup.py.

14.  Go find pulsars!

Scott Ransom
Mar 2009
